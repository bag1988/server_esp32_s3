BLE характеристики для датчика Xiaomi LYWSD03MMC
Общая информация о LYWSD03MMC
LYWSD03MMC - это компактный датчик температуры и влажности от Xiaomi, который использует Bluetooth Low Energy (BLE) для передачи данных. Он имеет LCD-дисплей, показывающий текущую температуру, влажность и уровень заряда батареи.

BLE характеристики
1. Основные сервисы
Сервис общей информации (Generic Access)
UUID: 0x1800
Характеристики:
Device Name (0x2A00) - имя устройства, обычно "LYWSD03MMC"
Appearance (0x2A01) - тип устройства
Сервис информации об устройстве (Device Information)
UUID: 0x180A
Характеристики:
Model Number (0x2A24) - номер модели
Serial Number (0x2A25) - серийный номер
Firmware Revision (0x2A26) - версия прошивки
Hardware Revision (0x2A27) - версия аппаратного обеспечения
Manufacturer Name (0x2A29) - имя производителя (Xiaomi)
2. Специфические сервисы для LYWSD03MMC
Сервис данных (Data Service)
UUID: EBE0CCB0-7A0A-4B0C-8A1A-6FF2997DA3A6
Характеристики:
Температура и влажность (EBE0CCC1-7A0A-4B0C-8A1A-6FF2997DA3A6)

Формат: 5 байт
Байты 0-1: Температура (little-endian, int16, деление на 100 для получения °C)
Байт 2: Влажность (uint8, %)
Байты 3-4: Неизвестно/зарезервировано
Уровень батареи (EBE0CCC4-7A0A-4B0C-8A1A-6FF2997DA3A6)

Формат: 1 байт
Значение: Уровень заряда батареи в процентах (0-100%)
Настройки единиц измерения (EBE0CCC1-7A0A-4B0C-8A1A-6FF2997DA3A6)

Формат: 1 байт
Значение: 0x00 для °C, 0x01 для °F
Сервис аутентификации (для новых прошивок)
UUID: FE95
Характеристики:
Токен аутентификации - используется для шифрования данных в новых версиях прошивки
3. Рекламные пакеты (Advertising Data)
LYWSD03MMC также передает данные в рекламных пакетах BLE, что позволяет получать информацию без установления соединения:

Manufacturer Data (0x95FE - Xiaomi)
Формат: Зависит от версии прошивки
Для нешифрованных данных:
Байты 0-1: Идентификатор производителя (0x95FE)
Байт 2: Тип устройства
Байты 3-4: Счетчик пакетов
Байты 5-10: MAC-адрес
Байты 11-12: Температура (little-endian, int16, деление на 100 для получения °C)
Байт 13: Влажность (uint8, %)
Байт 14: Уровень заряда батареи (uint8, %)
Байт 15: Контрольная сумма
4. Особенности работы с шифрованием
В новых версиях прошивки (начиная с 1.4.x) Xiaomi добавила шифрование данных. Для получения данных необходимо:

Подключиться к устройству
Выполнить процедуру аутентификации с использованием токена
Расшифровать данные с использованием ключа, полученного в процессе аутентификации
Алгоритм шифрования основан на AES-CCM с 12-байтным nonce и 4-байтным MIC.

5. Команды для управления
Изменение единиц измерения: Запись 0x00 (°C) или 0x01 (°F) в характеристику настроек
Запрос текущих данных: Чтение характеристики температуры и влажности
Уведомления: Подписка на уведомления для получения обновлений в реальном времени
Пример кода для работы с LYWSD03MMC

// Пример кода для чтения данных с LYWSD03MMC (без шифрования)
void readXiaomiData(BLEClient* pClient) {
  // Получение сервиса данных
  BLERemoteService* pRemoteService = pClient->getService(BLEUUID("EBE0CCB0-7A0A-4B0C-8A1A-6FF2997DA3A6"));
  if (pRemoteService == nullptr) {
    Serial.println("Не удалось найти сервис данных");
    return;
  }

  // Получение характеристики температуры и влажности
  BLERemoteCharacteristic* pCharacteristic = pRemoteService->getCharacteristic(
    BLEUUID("EBE0CCC1-7A0A-4B0C-8A1A-6FF2997DA3A6"));
  
  if (pCharacteristic == nullptr) {
    Serial.println("Не удалось найти характеристику температуры и влажности");
    return;
  }

  // Чтение данных
  std::string value = pCharacteristic->readValue();
  if (value.length() >= 5) {
    // Преобразование данных
    int16_t tempRaw = (uint8_t)value[0] | (((uint8_t)value[1]) << 8);
    float temperature = tempRaw / 100.0;
    uint8_t humidity = (uint8_t)value[2];
    
    Serial.printf("Температура: %.2f°C, Влажность: %d%%\n", temperature, humidity);
  }
}
